buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven { url = 'http://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.1.+'
        classpath 'club.minnced:java-discord-rpc:2.0.1'
    }
}

import net.minecraftforge.forge.tasks.*

apply plugin: 'eclipse'
apply plugin: 'net.minecraftforge.gradle.patcher'

configurations {
    shade
    compile.extendsFrom shade
}

group = 'nl._99th_dutchies'
version = '0.6.0'

ext {
    minecraft_version = '1.16.5'
    mcp_version = '20210115.111550'
    mappings_channel = 'official'
    mappings_version = '1.16.5'
    spi_version = '3.2.0'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    shade 'net.minecraftforge:forgespi:' + spi_version
    shade 'club.minnced:java-discord-rpc:2.0.1'
}

project(':mcp') {
    apply plugin: 'net.minecraftforge.gradle.mcp'
    mcp {
        config = minecraft_version + '-' + mcp_version
        pipeline = 'joined'
    }
}

evaluationDependsOn(':mcp')

patcher {
    parent = project(':mcp')
    patchedSrc = file('src/main/java')
    mappings channel: mappings_channel, version: mappings_version
    mcVersion = minecraft_version
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

task runclient(type: JavaExec) {
    group = "MCP"
    description = "Runs the client"
    classpath sourceSets.main.runtimeClasspath
    if (System.getProperty("os.name").toLowerCase().contains("mac")) {
        jvmArgs '-XstartOnFirstThread'
    }
    args '--gameDir', '.'
    args '--version', minecraft_version
    args '--assetsDir', downloadAssets.output
    args '--assetIndex', "1.16"
    args '--accessToken', '0'
    main 'net.minecraft.client.main.Main'
    workingDir 'run'
}

task setup() {
    group = "MCP"
    description = "Setups the dev workspace"
    dependsOn ':extractMapped'
    mkdir 'run/assets'
    copy {
        from downloadAssets.output.path
        into 'run/assets'
    }
}

task copyAssets {
    group = "MCP"
    description = "Download and place the assets into the run folder"
    dependsOn ':downloadAssets'
    mkdir 'run/assets'
    copy {
        from downloadAssets.output.path
        into 'run/assets'
    }
}

task createFullJar(type:Exec) {
    group = "MCP"
    description = "Build and create the full .jar file"
    dependsOn ':build'

    doFirst {
        workingDir = file('./installers/')
        commandLine = ['cmd', '/C', 'start', 'builder.bat', minecraft_version, '99th_DutchClient-' + version]
    }
}