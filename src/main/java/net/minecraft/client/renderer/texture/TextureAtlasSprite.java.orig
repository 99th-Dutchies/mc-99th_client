package net.minecraft.client.renderer.texture;

import com.google.common.collect.Lists;
import com.mojang.blaze3d.platform.GlStateManager;
import com.mojang.blaze3d.systems.RenderSystem;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import com.mojang.datafixers.util.Pair;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import javax.annotation.Nullable;
import net.minecraft.client.renderer.IRenderTypeBuffer;
import net.minecraft.client.renderer.SpriteAwareVertexBuilder;
import net.minecraft.client.resources.data.AnimationFrame;
import net.minecraft.client.resources.data.AnimationMetadataSection;
import net.minecraft.crash.CrashReport;
import net.minecraft.crash.CrashReportCategory;
import net.minecraft.crash.ReportedException;
import net.minecraft.resources.IResource;
import net.minecraft.resources.IResourceManager;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.extensions.IForgeTextureAtlasSprite;
import net.optifine.Config;
import net.optifine.SmartAnimations;
import net.optifine.shaders.Shaders;
import net.optifine.shaders.ShadersTextureType;
import net.optifine.texture.IColorBlender;
import net.optifine.util.CounterInt;
import net.optifine.util.TextureUtils;

public class TextureAtlasSprite implements AutoCloseable, IForgeTextureAtlasSprite {
   private final AtlasTexture field_229225_b_;
   private final TextureAtlasSprite.Info field_229226_c_;
   private final AnimationMetadataSection field_110982_k;
   protected final NativeImage[] field_195670_c;
   private final int[] field_195671_d;
   private final int[] field_195672_e;
   @Nullable
   private final TextureAtlasSprite.InterpolationData field_229227_g_;
   private final int field_110975_c;
   private final int field_110974_d;
   private final float field_110979_l;
   private final float field_110980_m;
   private final float field_110977_n;
   private final float field_110978_o;
   private int field_110973_g;
   private int field_110983_h;
   private int indexInMap = -1;
   public float baseU;
   public float baseV;
   public int sheetWidth;
   public int sheetHeight;
   public int glSpriteTextureId = -1;
   public TextureAtlasSprite spriteSingle = null;
   public boolean isSpriteSingle = false;
   public static final String SUFFIX_SPRITE_SINGLE = ".sprite_single";
   public int mipmapLevels = 0;
   public TextureAtlasSprite spriteNormal = null;
   public TextureAtlasSprite spriteSpecular = null;
   public ShadersTextureType spriteShadersType = null;
   public TextureAtlasSprite spriteEmissive = null;
   public boolean isSpriteEmissive = false;
   private int animationIndex = -1;
   private boolean animationActive = false;
   private boolean usesParentAnimationTime = false;
   private boolean terrain;
   private boolean shaders;
   private boolean multiTexture;
   private IResourceManager resourceManager;

   public TextureAtlasSprite(ResourceLocation p_i242114_1_) {
      this.field_229225_b_ = null;
      this.field_229226_c_ = new TextureAtlasSprite.Info(p_i242114_1_, 0, 0, (AnimationMetadataSection)null);
      this.field_110982_k = null;
      this.field_195670_c = null;
      this.field_195671_d = new int[0];
      this.field_195672_e = new int[0];
      this.field_229227_g_ = null;
      this.field_110975_c = 0;
      this.field_110974_d = 0;
      this.field_110979_l = 0.0F;
      this.field_110980_m = 0.0F;
      this.field_110977_n = 0.0F;
      this.field_110978_o = 0.0F;
   }

   private TextureAtlasSprite(TextureAtlasSprite p_i242115_1_) {
      this.field_229225_b_ = p_i242115_1_.field_229225_b_;
      TextureAtlasSprite.Info textureatlassprite$info = p_i242115_1_.field_229226_c_;
      ResourceLocation resourcelocation = textureatlassprite$info.func_229248_a_();
      ResourceLocation resourcelocation1 = new ResourceLocation(resourcelocation.func_110624_b(), resourcelocation.func_110623_a() + ".sprite_single");
      int i = textureatlassprite$info.func_229250_b_();
      int j = textureatlassprite$info.func_229252_c_();
      AnimationMetadataSection animationmetadatasection = textureatlassprite$info.getSpriteAnimationMetadata();
      this.field_229226_c_ = new TextureAtlasSprite.Info(resourcelocation1, i, j, animationmetadatasection);
      this.field_110982_k = p_i242115_1_.field_110982_k;
      this.usesParentAnimationTime = true;
      this.field_195670_c = p_i242115_1_.field_195670_c;
      this.field_195671_d = p_i242115_1_.field_195671_d;
      this.field_195672_e = p_i242115_1_.field_195672_e;
      if (p_i242115_1_.field_229227_g_ != null) {
         this.field_229227_g_ = new TextureAtlasSprite.InterpolationData(p_i242115_1_.field_229227_g_.field_229256_b_);
      } else {
         this.field_229227_g_ = null;
      }

      this.field_110975_c = 0;
      this.field_110974_d = 0;
      this.field_110979_l = 0.0F;
      this.field_110980_m = 1.0F;
      this.field_110977_n = 0.0F;
      this.field_110978_o = 1.0F;
      this.field_110973_g = p_i242115_1_.field_110973_g;
      this.field_110983_h = p_i242115_1_.field_110983_h;
      this.indexInMap = p_i242115_1_.indexInMap;
      this.baseU = p_i242115_1_.baseU;
      this.baseV = p_i242115_1_.baseV;
      this.sheetWidth = p_i242115_1_.sheetWidth;
      this.sheetHeight = p_i242115_1_.sheetHeight;
      this.isSpriteSingle = true;
      this.mipmapLevels = p_i242115_1_.mipmapLevels;
      this.animationIndex = p_i242115_1_.animationIndex;
      this.animationActive = p_i242115_1_.animationActive;
   }

   protected TextureAtlasSprite(AtlasTexture p_i226049_1_, TextureAtlasSprite.Info p_i226049_2_, int p_i226049_3_, int p_i226049_4_, int p_i226049_5_, int p_i226049_6_, int p_i226049_7_, NativeImage p_i226049_8_) {
      this(p_i226049_1_, p_i226049_2_, p_i226049_3_, p_i226049_4_, p_i226049_5_, p_i226049_6_, p_i226049_7_, p_i226049_8_, (ShadersTextureType)null);
   }

   protected TextureAtlasSprite(AtlasTexture p_i242116_1_, TextureAtlasSprite.Info p_i242116_2_, int p_i242116_3_, int p_i242116_4_, int p_i242116_5_, int p_i242116_6_, int p_i242116_7_, NativeImage p_i242116_8_, ShadersTextureType p_i242116_9_) {
      this.field_229225_b_ = p_i242116_1_;
      AnimationMetadataSection animationmetadatasection = p_i242116_2_.field_229247_d_;
      int i = p_i242116_2_.field_229245_b_;
      int j = p_i242116_2_.field_229246_c_;
      this.field_110975_c = p_i242116_6_;
      this.field_110974_d = p_i242116_7_;
      this.field_110979_l = (float)p_i242116_6_ / (float)p_i242116_4_;
      this.field_110980_m = (float)(p_i242116_6_ + i) / (float)p_i242116_4_;
      this.field_110977_n = (float)p_i242116_7_ / (float)p_i242116_5_;
      this.field_110978_o = (float)(p_i242116_7_ + j) / (float)p_i242116_5_;
      if (p_i242116_2_.scaleFactor > 1.0D) {
         int k = (int)Math.round((double)p_i242116_8_.func_195702_a() * p_i242116_2_.scaleFactor);
         NativeImage nativeimage = TextureUtils.scaleImage(p_i242116_8_, k);
         if (nativeimage != p_i242116_8_) {
            p_i242116_8_.close();
            p_i242116_8_ = nativeimage;
         }
      }

      this.spriteShadersType = p_i242116_9_;
      IColorBlender icolorblender = this.field_229225_b_.getShadersColorBlender(this.spriteShadersType);
      if (this.spriteShadersType == null && !p_i242116_2_.func_229248_a_().func_110623_a().endsWith("_leaves")) {
         this.fixTransparentColor(p_i242116_8_);
      }

      NativeImage nativeimage1 = p_i242116_8_;
      int l = p_i242116_8_.func_195702_a() / animationmetadatasection.func_229302_b_(i);
      int i1 = p_i242116_8_.func_195714_b() / animationmetadatasection.func_229301_a_(j);
      if (animationmetadatasection.func_110473_c() > 0) {
         int j1 = animationmetadatasection.func_130073_e().stream().max(Integer::compareTo).get() + 1;
         this.field_195671_d = new int[j1];
         this.field_195672_e = new int[j1];
         Arrays.fill(this.field_195671_d, -1);
         Arrays.fill(this.field_195672_e, -1);

         for(int k1 : animationmetadatasection.func_130073_e()) {
            if (k1 >= l * i1) {
               throw new RuntimeException("invalid frameindex " + k1);
            }

            int l1 = k1 / l;
            int i2 = k1 % l;
            this.field_195671_d[k1] = i2;
            this.field_195672_e[k1] = l1;
         }
      } else {
         List<AnimationFrame> list = Lists.newArrayList();
         int j2 = l * i1;
         this.field_195671_d = new int[j2];
         this.field_195672_e = new int[j2];

         for(int k2 = 0; k2 < i1; ++k2) {
            for(int l2 = 0; l2 < l; ++l2) {
               int i3 = k2 * l + l2;
               this.field_195671_d[i3] = l2;
               this.field_195672_e[i3] = k2;
               list.add(new AnimationFrame(i3, -1));
            }
         }

         animationmetadatasection = new AnimationMetadataSection(list, i, j, animationmetadatasection.func_110469_d(), animationmetadatasection.func_177219_e());
      }

      this.field_229226_c_ = new TextureAtlasSprite.Info(p_i242116_2_.field_229244_a_, i, j, animationmetadatasection);
      this.field_110982_k = animationmetadatasection;

      try {
         try {
            this.field_195670_c = MipmapGenerator.generateMipmaps(p_i242116_8_, p_i242116_3_, icolorblender);
         } catch (Throwable throwable) {
            CrashReport crashreport1 = CrashReport.func_85055_a(throwable, "Generating mipmaps for frame");
            CrashReportCategory crashreportcategory1 = crashreport1.func_85058_a("Frame being iterated");
            crashreportcategory1.func_189529_a("First frame", () -> {
               StringBuilder stringbuilder = new StringBuilder();
               if (stringbuilder.length() > 0) {
                  stringbuilder.append(", ");
               }

               stringbuilder.append(nativeimage1.func_195702_a()).append("x").append(nativeimage1.func_195714_b());
               return stringbuilder.toString();
            });
            throw new ReportedException(crashreport1);
         }
      } catch (Throwable throwable11) {
         CrashReport crashreport = CrashReport.func_85055_a(throwable11, "Applying mipmap");
         CrashReportCategory crashreportcategory = crashreport.func_85058_a("Sprite being mipmapped");
         crashreportcategory.func_189529_a("Sprite name", () -> {
            return this.func_195668_m().toString();
         });
         crashreportcategory.func_189529_a("Sprite size", () -> {
            return this.func_94211_a() + " x " + this.func_94216_b();
         });
         crashreportcategory.func_189529_a("Sprite frames", () -> {
            return this.func_110970_k() + " frames";
         });
         crashreportcategory.func_71507_a("Mipmap levels", p_i242116_3_);
         throw new ReportedException(crashreport);
      }

      if (animationmetadatasection.func_177219_e()) {
         this.field_229227_g_ = new TextureAtlasSprite.InterpolationData(p_i242116_2_, p_i242116_3_);
      } else {
         this.field_229227_g_ = null;
      }

      this.mipmapLevels = p_i242116_3_;
      this.baseU = Math.min(this.field_110979_l, this.field_110980_m);
      this.baseV = Math.min(this.field_110977_n, this.field_110978_o);
      this.sheetWidth = p_i242116_4_;
      this.sheetHeight = p_i242116_5_;
   }

   private void func_195659_d(int p_195659_1_) {
      int i = this.field_195671_d[p_195659_1_] * this.field_229226_c_.field_229245_b_;
      int j = this.field_195672_e[p_195659_1_] * this.field_229226_c_.field_229246_c_;
      this.func_195667_a(i, j, this.field_195670_c);
   }

   private void func_195667_a(int p_195667_1_, int p_195667_2_, NativeImage[] p_195667_3_) {
      boolean flag = false;
      boolean flag1 = this.isSpriteSingle;

      for(int i = 0; i < p_195667_3_.length && this.func_94211_a() >> i > 0 && this.func_94216_b() >> i > 0; ++i) {
         p_195667_3_[i].func_227789_a_(i, this.field_110975_c >> i, this.field_110974_d >> i, p_195667_1_ >> i, p_195667_2_ >> i, this.field_229226_c_.field_229245_b_ >> i, this.field_229226_c_.field_229246_c_ >> i, flag, flag1, p_195667_3_.length > 1, false);
      }

   }

   public int func_94211_a() {
      return this.field_229226_c_.field_229245_b_;
   }

   public int func_94216_b() {
      return this.field_229226_c_.field_229246_c_;
   }

   public float func_94209_e() {
      return this.field_110979_l;
   }

   public float func_94212_f() {
      return this.field_110980_m;
   }

   public float func_94214_a(double p_94214_1_) {
      float f = this.field_110980_m - this.field_110979_l;
      return this.field_110979_l + f * (float)p_94214_1_ / 16.0F;
   }

   public float func_94206_g() {
      return this.field_110977_n;
   }

   public float func_94210_h() {
      return this.field_110978_o;
   }

   public float func_94207_b(double p_94207_1_) {
      float f = this.field_110978_o - this.field_110977_n;
      return this.field_110977_n + f * (float)p_94207_1_ / 16.0F;
   }

   public ResourceLocation func_195668_m() {
      return this.field_229226_c_.field_229244_a_;
   }

   public AtlasTexture func_229241_m_() {
      return this.field_229225_b_;
   }

   public int func_110970_k() {
      return this.field_195671_d.length;
   }

   public void close() {
      for(NativeImage nativeimage : this.field_195670_c) {
         if (nativeimage != null) {
            nativeimage.close();
         }
      }

      if (this.field_229227_g_ != null) {
         this.field_229227_g_.close();
      }

      if (this.spriteSingle != null) {
      }

      if (this.spriteNormal != null) {
         this.spriteNormal.close();
      }

      if (this.spriteSpecular != null) {
         this.spriteSpecular.close();
      }

   }

   public String toString() {
      int i = this.field_195671_d.length;
      return "TextureAtlasSprite{name='" + this.field_229226_c_.field_229244_a_ + '\'' + ", frameCount=" + i + ", x=" + this.field_110975_c + ", y=" + this.field_110974_d + ", height=" + this.field_229226_c_.field_229246_c_ + ", width=" + this.field_229226_c_.field_229245_b_ + ", u0=" + this.field_110979_l + ", u1=" + this.field_110980_m + ", v0=" + this.field_110977_n + ", v1=" + this.field_110978_o + '}';
   }

   public boolean func_195662_a(int p_195662_1_, int p_195662_2_, int p_195662_3_) {
      return (this.field_195670_c[0].func_195709_a(p_195662_2_ + this.field_195671_d[p_195662_1_] * this.field_229226_c_.field_229245_b_, p_195662_3_ + this.field_195672_e[p_195662_1_] * this.field_229226_c_.field_229246_c_) >> 24 & 255) == 0;
   }

   public void func_195663_q() {
      this.func_195659_d(0);
   }

   private float func_229228_a_() {
      float f = (float)this.field_229226_c_.field_229245_b_ / (this.field_110980_m - this.field_110979_l);
      float f1 = (float)this.field_229226_c_.field_229246_c_ / (this.field_110978_o - this.field_110977_n);
      return Math.max(f1, f);
   }

   public float func_229242_p_() {
      return 4.0F / this.func_229228_a_();
   }

   public void func_94219_l() {
      if (this.field_110982_k != null) {
         this.animationActive = SmartAnimations.isActive() ? SmartAnimations.isSpriteRendered(this) : true;
         if (this.field_110982_k.func_110473_c() <= 1) {
            this.animationActive = false;
         }

         if (this.spriteSingle != null && this.spriteSingle.usesParentAnimationTime) {
            this.spriteSingle.field_110983_h = this.field_110983_h;
            this.spriteSingle.field_110973_g = this.field_110973_g;
         }

         if (this.spriteNormal != null && this.spriteNormal.usesParentAnimationTime) {
            this.spriteNormal.field_110983_h = this.field_110983_h;
            this.spriteNormal.field_110973_g = this.field_110973_g;
         }

         if (this.spriteSpecular != null && this.spriteSpecular.usesParentAnimationTime) {
            this.spriteSpecular.field_110983_h = this.field_110983_h;
            this.spriteSpecular.field_110973_g = this.field_110973_g;
         }

         ++this.field_110983_h;
         if (this.field_110983_h >= this.field_110982_k.func_110472_a(this.field_110973_g)) {
            int i = this.field_110982_k.func_110468_c(this.field_110973_g);
            int j = this.field_110982_k.func_110473_c() == 0 ? this.func_110970_k() : this.field_110982_k.func_110473_c();
            this.field_110973_g = (this.field_110973_g + 1) % j;
            this.field_110983_h = 0;
            int k = this.field_110982_k.func_110468_c(this.field_110973_g);
            if (!this.animationActive) {
               return;
            }

            if (i != k && k >= 0 && k < this.func_110970_k()) {
               this.func_195659_d(k);
            }
         } else if (this.field_229227_g_ != null) {
            if (!this.animationActive) {
               return;
            }

            if (!RenderSystem.isOnRenderThread()) {
               RenderSystem.recordRenderCall(() -> {
                  this.field_229227_g_.func_229257_a_();
               });
            } else {
               this.field_229227_g_.func_229257_a_();
            }
         }

      }
   }

   public boolean func_130098_m() {
      return this.field_110982_k.func_110473_c() > 1;
   }

   public IVertexBuilder func_229230_a_(IVertexBuilder p_229230_1_) {
      if (this.func_195668_m() == TextureUtils.LOCATION_SPRITE_EMPTY) {
         IRenderTypeBuffer.Impl irendertypebuffer$impl = p_229230_1_.getRenderTypeBuffer();
         if (irendertypebuffer$impl != null) {
            return irendertypebuffer$impl.getDummyBuffer();
         }
      }

      return new SpriteAwareVertexBuilder(p_229230_1_, this);
   }

   public int getIndexInMap() {
      return this.indexInMap;
   }

   public void updateIndexInMap(CounterInt p_updateIndexInMap_1_) {
      if (this.indexInMap < 0) {
         if (this.field_229225_b_ != null) {
            TextureAtlasSprite textureatlassprite = this.field_229225_b_.getRegisteredSprite(this.func_195668_m());
            if (textureatlassprite != null) {
               this.indexInMap = textureatlassprite.getIndexInMap();
            }
         }

         if (this.indexInMap < 0) {
            this.indexInMap = p_updateIndexInMap_1_.nextValue();
         }

      }
   }

   public int getAnimationIndex() {
      return this.animationIndex;
   }

   public void setAnimationIndex(int p_setAnimationIndex_1_) {
      this.animationIndex = p_setAnimationIndex_1_;
      if (this.spriteSingle != null) {
         this.spriteSingle.setAnimationIndex(p_setAnimationIndex_1_);
      }

      if (this.spriteNormal != null) {
         this.spriteNormal.setAnimationIndex(p_setAnimationIndex_1_);
      }

      if (this.spriteSpecular != null) {
         this.spriteSpecular.setAnimationIndex(p_setAnimationIndex_1_);
      }

   }

   public boolean isAnimationActive() {
      return this.animationActive;
   }

   private void fixTransparentColor(NativeImage p_fixTransparentColor_1_) {
      int[] aint = new int[p_fixTransparentColor_1_.func_195702_a() * p_fixTransparentColor_1_.func_195714_b()];
      p_fixTransparentColor_1_.getBufferRGBA().get(aint);
      this.fixTransparentColor(aint);
      p_fixTransparentColor_1_.getBufferRGBA().put(aint);
   }

   private void fixTransparentColor(int[] p_fixTransparentColor_1_) {
      if (p_fixTransparentColor_1_ != null) {
         long i = 0L;
         long j = 0L;
         long k = 0L;
         long l = 0L;

         for(int i1 = 0; i1 < p_fixTransparentColor_1_.length; ++i1) {
            int j1 = p_fixTransparentColor_1_[i1];
            int k1 = j1 >> 24 & 255;
            if (k1 >= 16) {
               int l1 = j1 >> 16 & 255;
               int i2 = j1 >> 8 & 255;
               int j2 = j1 & 255;
               i += (long)l1;
               j += (long)i2;
               k += (long)j2;
               ++l;
            }
         }

         if (l > 0L) {
            int l2 = (int)(i / l);
            int i3 = (int)(j / l);
            int j3 = (int)(k / l);
            int k3 = l2 << 16 | i3 << 8 | j3;

            for(int l3 = 0; l3 < p_fixTransparentColor_1_.length; ++l3) {
               int i4 = p_fixTransparentColor_1_[l3];
               int k2 = i4 >> 24 & 255;
               if (k2 <= 16) {
                  p_fixTransparentColor_1_[l3] = k3;
               }
            }

         }
      }
   }

   public double getSpriteU16(float p_getSpriteU16_1_) {
      float f = this.field_110980_m - this.field_110979_l;
      return (double)((p_getSpriteU16_1_ - this.field_110979_l) / f * 16.0F);
   }

   public double getSpriteV16(float p_getSpriteV16_1_) {
      float f = this.field_110978_o - this.field_110977_n;
      return (double)((p_getSpriteV16_1_ - this.field_110977_n) / f * 16.0F);
   }

   public void bindSpriteTexture() {
      if (this.glSpriteTextureId < 0) {
         this.glSpriteTextureId = TextureUtil.func_225678_a_();
         TextureUtil.func_225681_a_(this.glSpriteTextureId, this.mipmapLevels, this.func_94211_a(), this.func_94216_b());
         boolean flag = this.field_229225_b_.isTextureBlend(this.spriteShadersType);
         if (flag) {
            TextureUtils.applyAnisotropicLevel();
         } else {
            GlStateManager.func_227642_a_(3553, 34046, 1.0F);
            int i = this.mipmapLevels > 0 ? 9984 : 9728;
            GlStateManager.func_227677_b_(3553, 10241, i);
            GlStateManager.func_227677_b_(3553, 10240, 9728);
         }
      }

      TextureUtils.bindTexture(this.glSpriteTextureId);
   }

   public void deleteSpriteTexture() {
      if (this.glSpriteTextureId >= 0) {
         TextureUtil.func_225679_a_(this.glSpriteTextureId);
         this.glSpriteTextureId = -1;
      }
   }

   public float toSingleU(float p_toSingleU_1_) {
      p_toSingleU_1_ = p_toSingleU_1_ - this.baseU;
      float f = (float)this.sheetWidth / (float)this.func_94211_a();
      return p_toSingleU_1_ * f;
   }

   public float toSingleV(float p_toSingleV_1_) {
      p_toSingleV_1_ = p_toSingleV_1_ - this.baseV;
      float f = (float)this.sheetHeight / (float)this.func_94216_b();
      return p_toSingleV_1_ * f;
   }

   public NativeImage[] getMipmapImages() {
      return this.field_195670_c;
   }

   public AnimationMetadataSection getAnimationMetadata() {
      return this.field_110982_k;
   }

   public int getOriginX() {
      return this.field_110975_c;
   }

   public int getOriginY() {
      return this.field_110974_d;
   }

   public float getUnInterpolatedU(float p_getUnInterpolatedU_1_) {
      float f = this.field_110980_m - this.field_110979_l;
      return (p_getUnInterpolatedU_1_ - this.field_110979_l) / f * 16.0F;
   }

   public float getUnInterpolatedV(float p_getUnInterpolatedV_1_) {
      float f = this.field_110978_o - this.field_110977_n;
      return (p_getUnInterpolatedV_1_ - this.field_110977_n) / f * 16.0F;
   }

   public TextureAtlasSprite makeSpriteSingle() {
      TextureAtlasSprite textureatlassprite = new TextureAtlasSprite(this);
      textureatlassprite.isSpriteSingle = true;
      return textureatlassprite;
   }

   public TextureAtlasSprite makeSpriteShaders(ShadersTextureType p_makeSpriteShaders_1_, int p_makeSpriteShaders_2_, AnimationMetadataSection p_makeSpriteShaders_3_) {
      String s = p_makeSpriteShaders_1_.getSuffix();
      ResourceLocation resourcelocation = new ResourceLocation(this.func_195668_m().func_110624_b(), this.func_195668_m().func_110623_a() + s);
      ResourceLocation resourcelocation1 = this.field_229225_b_.func_195420_b(resourcelocation);
      TextureAtlasSprite textureatlassprite = null;
      if (this.resourceManager.func_219533_b(resourcelocation1)) {
         try (IResource iresource = this.resourceManager.func_199002_a(resourcelocation1)) {
            IResource iresource1 = this.resourceManager.func_199002_a(resourcelocation1);
            PngSizeInfo pngsizeinfo = new PngSizeInfo(resourcelocation1.toString(), iresource1.func_199027_b());
            AnimationMetadataSection animationmetadatasection = iresource.func_199028_a(AnimationMetadataSection.field_195817_a);
            if (animationmetadatasection == null) {
               animationmetadatasection = AnimationMetadataSection.field_229300_b_;
            }

            Pair<Integer, Integer> pair = animationmetadatasection.func_225641_a_(pngsizeinfo.field_188533_a, pngsizeinfo.field_188534_b);
            TextureAtlasSprite.Info textureatlassprite$info = new TextureAtlasSprite.Info(resourcelocation, pair.getFirst(), pair.getSecond(), animationmetadatasection);
            NativeImage nativeimage = NativeImage.func_195713_a(iresource.func_199027_b());
            if (nativeimage.func_195702_a() != this.func_94211_a()) {
               NativeImage nativeimage1 = TextureUtils.scaleImage(nativeimage, this.func_94211_a());
               if (nativeimage1 != nativeimage) {
                  double d0 = 1.0D * (double)this.func_94211_a() / (double)nativeimage.func_195702_a();
                  nativeimage.close();
                  nativeimage = nativeimage1;
                  textureatlassprite$info = new TextureAtlasSprite.Info(resourcelocation, (int)((double)pair.getFirst().intValue() * d0), (int)((double)pair.getSecond().intValue() * d0), animationmetadatasection);
               }
            }

            textureatlassprite = new TextureAtlasSprite(this.field_229225_b_, textureatlassprite$info, this.mipmapLevels, this.sheetWidth, this.sheetHeight, this.field_110975_c, this.field_110974_d, nativeimage, p_makeSpriteShaders_1_);
         } catch (IOException ioexception) {
         }
      }

      if (textureatlassprite == null) {
         NativeImage nativeimage2 = new NativeImage(this.func_94211_a(), this.func_94216_b(), false);
         int i = TextureUtils.toAbgr(p_makeSpriteShaders_2_);
         nativeimage2.func_195715_a(0, 0, nativeimage2.func_195702_a(), nativeimage2.func_195714_b(), i);
         TextureAtlasSprite.Info textureatlassprite$info1 = new TextureAtlasSprite.Info(resourcelocation, this.func_94211_a(), this.func_94216_b(), AnimationMetadataSection.field_229300_b_);
         textureatlassprite = new TextureAtlasSprite(this.field_229225_b_, textureatlassprite$info1, this.mipmapLevels, this.sheetWidth, this.sheetHeight, this.field_110975_c, this.field_110974_d, nativeimage2, p_makeSpriteShaders_1_);
      }

      if (this.terrain && this.multiTexture && !this.isSpriteSingle) {
         textureatlassprite.spriteSingle = textureatlassprite.makeSpriteSingle();
      }

      textureatlassprite.usesParentAnimationTime = matchesTiming(textureatlassprite.field_110982_k, p_makeSpriteShaders_3_);
      return textureatlassprite;
   }

   public boolean isTerrain() {
      return this.terrain;
   }

   private void setTerrain(boolean p_setTerrain_1_) {
      this.terrain = p_setTerrain_1_;
      this.multiTexture = false;
      this.shaders = false;
      if (this.spriteSingle != null) {
         this.deleteSpriteTexture();
         this.spriteSingle = null;
      }

      if (this.spriteNormal != null) {
         if (this.spriteNormal.spriteSingle != null) {
            this.spriteNormal.deleteSpriteTexture();
         }

         this.spriteNormal.close();
         this.spriteNormal = null;
      }

      if (this.spriteSpecular != null) {
         if (this.spriteSpecular.spriteSingle != null) {
            this.spriteSpecular.deleteSpriteTexture();
         }

         this.spriteSpecular.close();
         this.spriteSpecular = null;
      }

      this.multiTexture = Config.isMultiTexture();
      this.shaders = Config.isShaders();
      if (this.terrain && this.multiTexture && !this.isSpriteSingle) {
         this.spriteSingle = this.makeSpriteSingle();
      }

      if (this.shaders && !this.isSpriteSingle) {
         if (this.spriteNormal == null && Shaders.configNormalMap) {
            this.spriteNormal = this.makeSpriteShaders(ShadersTextureType.NORMAL, -8421377, this.field_110982_k);
         }

         if (this.spriteSpecular == null && Shaders.configSpecularMap) {
            this.spriteSpecular = this.makeSpriteShaders(ShadersTextureType.SPECULAR, 0, this.field_110982_k);
         }
      }

   }

   private static boolean matchesTiming(AnimationMetadataSection p_matchesTiming_0_, AnimationMetadataSection p_matchesTiming_1_) {
      if (p_matchesTiming_0_ == p_matchesTiming_1_) {
         return true;
      } else if (p_matchesTiming_0_ != null && p_matchesTiming_1_ != null) {
         if (p_matchesTiming_0_.func_110469_d() != p_matchesTiming_1_.func_110469_d()) {
            return false;
         } else if (p_matchesTiming_0_.func_177219_e() != p_matchesTiming_1_.func_177219_e()) {
            return false;
         } else if (p_matchesTiming_0_.func_110473_c() != p_matchesTiming_1_.func_110473_c()) {
            return false;
         } else {
            for(int i = 0; i < p_matchesTiming_0_.func_110473_c(); ++i) {
               if (p_matchesTiming_0_.func_110472_a(i) != p_matchesTiming_1_.func_110472_a(i)) {
                  return false;
               }
            }

            return true;
         }
      } else {
         return false;
      }
   }

   public void update(IResourceManager p_update_1_) {
      this.resourceManager = p_update_1_;
      this.updateIndexInMap(this.field_229225_b_.getCounterIndexInMap());
      this.setTerrain(this.field_229225_b_.isTerrain());
   }

   public int getPixelRGBA(int p_getPixelRGBA_1_, int p_getPixelRGBA_2_, int p_getPixelRGBA_3_) {
      return this.field_195670_c[0].func_195709_a(p_getPixelRGBA_2_ + this.field_195671_d[p_getPixelRGBA_1_] * this.func_94211_a(), p_getPixelRGBA_3_ + this.field_195672_e[p_getPixelRGBA_1_] * this.func_94216_b());
   }

   public static final class Info {
      private final ResourceLocation field_229244_a_;
      private int field_229245_b_;
      private int field_229246_c_;
      private final AnimationMetadataSection field_229247_d_;
      private double scaleFactor = 1.0D;

      public Info(ResourceLocation p_i226050_1_, int p_i226050_2_, int p_i226050_3_, AnimationMetadataSection p_i226050_4_) {
         this.field_229244_a_ = p_i226050_1_;
         this.field_229245_b_ = p_i226050_2_;
         this.field_229246_c_ = p_i226050_3_;
         this.field_229247_d_ = p_i226050_4_;
      }

      public ResourceLocation func_229248_a_() {
         return this.field_229244_a_;
      }

      public int func_229250_b_() {
         return this.field_229245_b_;
      }

      public int func_229252_c_() {
         return this.field_229246_c_;
      }

      public void setSpriteWidth(int p_setSpriteWidth_1_) {
         this.field_229245_b_ = p_setSpriteWidth_1_;
      }

      public void setSpriteHeight(int p_setSpriteHeight_1_) {
         this.field_229246_c_ = p_setSpriteHeight_1_;
      }

      public AnimationMetadataSection getSpriteAnimationMetadata() {
         return this.field_229247_d_;
      }

      public double getScaleFactor() {
         return this.scaleFactor;
      }

      public void setScaleFactor(double p_setScaleFactor_1_) {
         this.scaleFactor = p_setScaleFactor_1_;
      }

      public String toString() {
         return "" + this.field_229244_a_ + ", width: " + this.field_229245_b_ + ", height: " + this.field_229246_c_ + ", frames: " + this.field_229247_d_.func_110473_c() + ", scale: " + this.scaleFactor;
      }
   }

   final class InterpolationData implements AutoCloseable {
      private final NativeImage[] field_229256_b_;

      private InterpolationData(NativeImage[] p_i242101_2_) {
         this.field_229256_b_ = p_i242101_2_;
      }

      private InterpolationData(TextureAtlasSprite.Info p_i226051_2_, int p_i226051_3_) {
         this.field_229256_b_ = new NativeImage[p_i226051_3_ + 1];

         for(int i = 0; i < this.field_229256_b_.length; ++i) {
            int j = p_i226051_2_.field_229245_b_ >> i;
            int k = p_i226051_2_.field_229246_c_ >> i;
            if (this.field_229256_b_[i] == null) {
               this.field_229256_b_[i] = new NativeImage(j, k, false);
            }
         }

      }

      private void func_229257_a_() {
         double d0 = 1.0D - (double)TextureAtlasSprite.this.field_110983_h / (double)TextureAtlasSprite.this.field_110982_k.func_110472_a(TextureAtlasSprite.this.field_110973_g);
         int i = TextureAtlasSprite.this.field_110982_k.func_110468_c(TextureAtlasSprite.this.field_110973_g);
         int j = TextureAtlasSprite.this.field_110982_k.func_110473_c() == 0 ? TextureAtlasSprite.this.func_110970_k() : TextureAtlasSprite.this.field_110982_k.func_110473_c();
         int k = TextureAtlasSprite.this.field_110982_k.func_110468_c((TextureAtlasSprite.this.field_110973_g + 1) % j);
         if (i != k && k >= 0 && k < TextureAtlasSprite.this.func_110970_k()) {
            if (!TextureAtlasSprite.this.isSpriteSingle) {
               for(int l = 0; l < this.field_229256_b_.length; ++l) {
                  int i1 = TextureAtlasSprite.this.field_229226_c_.field_229245_b_ >> l;
                  int j1 = TextureAtlasSprite.this.field_229226_c_.field_229246_c_ >> l;

                  for(int k1 = 0; k1 < j1; ++k1) {
                     for(int l1 = 0; l1 < i1; ++l1) {
                        int i2 = this.func_229259_a_(i, l, l1, k1);
                        int j2 = this.func_229259_a_(k, l, l1, k1);
                        int k2 = this.func_229258_a_(d0, i2 >> 16 & 255, j2 >> 16 & 255);
                        int l2 = this.func_229258_a_(d0, i2 >> 8 & 255, j2 >> 8 & 255);
                        int i3 = this.func_229258_a_(d0, i2 & 255, j2 & 255);
                        this.field_229256_b_[l].func_195700_a(l1, k1, i2 & -16777216 | k2 << 16 | l2 << 8 | i3);
                     }
                  }
               }
            }

            TextureAtlasSprite.this.func_195667_a(0, 0, this.field_229256_b_);
         }

      }

      private int func_229259_a_(int p_229259_1_, int p_229259_2_, int p_229259_3_, int p_229259_4_) {
         return TextureAtlasSprite.this.field_195670_c[p_229259_2_].func_195709_a(p_229259_3_ + (TextureAtlasSprite.this.field_195671_d[p_229259_1_] * TextureAtlasSprite.this.field_229226_c_.field_229245_b_ >> p_229259_2_), p_229259_4_ + (TextureAtlasSprite.this.field_195672_e[p_229259_1_] * TextureAtlasSprite.this.field_229226_c_.field_229246_c_ >> p_229259_2_));
      }

      private int func_229258_a_(double p_229258_1_, int p_229258_3_, int p_229258_4_) {
         return (int)(p_229258_1_ * (double)p_229258_3_ + (1.0D - p_229258_1_) * (double)p_229258_4_);
      }

      public void close() {
         for(NativeImage nativeimage : this.field_229256_b_) {
            if (nativeimage != null) {
               nativeimage.close();
            }
         }

      }
   }
}
